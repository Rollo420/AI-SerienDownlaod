services:

  #selenium-chromium:
  #  image: selenium/standalone-chromium:latest
  #  platform: linux/arm64
  #  container_name: selenium-chromium
  #  ports:
  #    - "4444:4444" # Host-Port 4444 -> Container-Port 4444
  #    - "7900:7900" # Host-Port 7901 -> Container-Port 7900
  #  shm_size: "3g" # Erhöht den Shared Memory für den Browser (kritisch für Stabilität)
  #  environment:
  #    - SE_VNC_PASSWORD=secret # WICHTIG: ÄNDERE DIESES PASSWORT!
  #    - SE_NODE_MAX_SESSIONS=3 # Jetzt 4 parallele Sessions
  #    - SE_START_XVFB=true # Essentiell für den Headless-Modus
  #    - DISPLAY_WIDTH=1920
  #    - DISPLAY_HEIGHT=1080
  #  networks:
  #    - pihole02_network
  #  restart: unless-stopped
  #  healthcheck: # Überprüft die Verfügbarkeit des Selenium Chromiums
  #    test: ["CMD", "curl", "-f", "http://localhost:4444"]
  #    interval: 10s
  #    timeout: 5s
  #    retries: 5
  #    start_period: 20s
  #  dns:
  #    - 172.21.0.100

  # Pi-hole DNS-Server
  pihole02:
    image: pihole/pihole:latest
    platform: linux/arm64
    container_name: pihole02
    hostname: pihole02
    ports:
      - "5354:53/tcp" # DNS
      - "5354:53/udp" # DNS
      - "8081:80/tcp" # Webinterface
    environment:
      TZ: 'Europe/Berlin'
      WEBPASSWORD: '0487146094jJ!!'
      DNSMASQ_LISTENING: all
      PIHOLE_DNS_: 8.8.8.8;8.8.4.4 # Korrigiert von pihole02_DNS_ zu PIHOLE_DNS_
      PIHOLE_ADLISTS: "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts https://mirror1.malwaredomains.com/files/justdomains https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt"
    #volumes:
      # Hier sollte ein Volume-Mapping für persistente Pi-hole-Konfigurationen sein,
      # z.B. - ./docker/PiHole/pihole:/etc/pihole
      # und - ./docker/PiHole/dnsmasq.d:/etc/dnsmasq.d
      # Dein aktuelles Mapping für adlists.list ist in Ordnung, aber das könnte erweitert werden.
      #- ./docker/PiHole/adlists.list:/etc/pihole/adlists.list # Optional: eigene Adlist-Datei
    cap_add:
      - NET_ADMIN
    networks:
      pihole02_network:
        ipv4_address: 172.21.0.100 # Feste IP-Adresse für Pi-hole im Netzwerk
    restart: unless-stopped
    healthcheck: # Überprüft die Verfügbarkeit von Pi-hole
      test: ["CMD", "curl", "-f", "http://localhost/admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  episodnemanager:
    build:
      context: . # Annahme: Dockerfile liegt im Root-Verzeichnis deines Projekts
      dockerfile: dockerfile # Dein Dockerfile für den Episodenmanager
    container_name: episodneManager
    volumes:
      - .:/app # Mountet das aktuelle Verzeichnis in /app im Container
    environment:
      - SELENIUM_HUB_URL=http://selenium-chromium:4444/wd/hub # <-- KORRIGIERT: Service-Name statt Container-Name
      - SERIE_NAME=rick-and-morty
      - PYTHONUNBUFFERED=1
    command: python /app/GetURL.py
    networks:
      - pihole02_network # <-- HINZUGEFÜGT: Der Episodenmanager muss im selben Netzwerk sein
    dns:
      - 172.21.0.100 # <-- HINZUGEFÜGT: Nutzt Pi-hole für DNS-Auflösung
    depends_on: # <-- HINZUGEFÜGT: Stellt sicher, dass Selenium und Pi-hole bereit sind
      #selenium-chromium:
      #  condition: service_healthy
      pihole02:
        condition: service_healthy

# Definition der Netzwerke
networks:
  pihole02_network:
    ipam:
      config:
        - subnet: 172.21.0.0/24